/* Generated by Opal 0.10.5 */
(function(Opal) {
  function $rb_gt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);
  }
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $gvars = Opal.gvars;

  Opal.add_stubs(['$setPrefixes', '$===', '$to_i', '$delete', '$sort', '$checkRoll', '$roll', '$gsub', '$collect', '$split', '$new', '$each', '$count', '$>', '$push', '$+', '$join']);
  return (function($base, $super) {
    function $OrgaRain(){};
    var self = $OrgaRain = $klass($base, $super, 'OrgaRain', $OrgaRain);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_5, TMP_8;

    def.sortType = nil;
    Opal.defn(self, '$initialize', TMP_1 = function $$initialize() {
      var $a, $b, self = this, $iter = TMP_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_index = nil, $zuper_length = nil;

      TMP_1.$$p = null;
      $zuper = [];
      
      for($zuper_index = 0; $zuper_index < arguments.length; $zuper_index++) {
        $zuper[$zuper_index] = arguments[$zuper_index];
      }
      ($a = ($b = self, Opal.find_super_dispatcher(self, 'initialize', TMP_1, false)), $a.$$p = $iter, $a).apply($b, $zuper);
      return self.sortType = 1;
    }, TMP_1.$$arity = 0);

    self.$setPrefixes(["(\\d+)?OR([0-9])?([0-9])?([0-9])?([0-9])?([0-9])?([0-9])?"]);

    Opal.defn(self, '$gameName', TMP_2 = function $$gameName() {
      var self = this;

      return "在りて遍くオルガレイン";
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$gameType', TMP_3 = function $$gameType() {
      var self = this;

      return "OrgaRain";
    }, TMP_3.$$arity = 0);

    Opal.defn(self, '$getHelpMessage', TMP_4 = function $$getHelpMessage() {
      var self = this;

      return "判定：[n]OR(count)\n\n[]内のコマンドは省略可能。\n「n」でダイス数を指定。省略時は「1」。\n(count)で命数を指定。「3111」のように記述。最大6つ。順不同可。\n\n【書式例】\n・5OR6042 → 5dで命数「0,2,4,6」の判定\n・6OR33333 → 6dで命数「3,3,3,3,3」の判定。\n";
    }, TMP_4.$$arity = 0);

    Opal.defn(self, '$rollDiceCommand', TMP_5 = function $$rollDiceCommand(command) {
      var $a, $b, self = this, diceCount = nil, countNo = nil;

      if ((($a = /(\d+)?OR([0-9])?([0-9])?([0-9])?([0-9])?([0-9])?([0-9])?$/i['$==='](command)) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        diceCount = (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))) !== false && $a !== nil && $a != null) ? $a : 1)).$to_i();
        countNo = [(((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](2))) !== false && $a !== nil && $a != null) ? $a : -1)).$to_i(), (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](3))) !== false && $a !== nil && $a != null) ? $a : -1)).$to_i(), (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](4))) !== false && $a !== nil && $a != null) ? $a : -1)).$to_i(), (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](5))) !== false && $a !== nil && $a != null) ? $a : -1)).$to_i(), (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](6))) !== false && $a !== nil && $a != null) ? $a : -1)).$to_i(), (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](7))) !== false && $a !== nil && $a != null) ? $a : -1)).$to_i()];
        countNo.$delete(-1);
        countNo = countNo.$sort();
        return self.$checkRoll(diceCount, countNo);};
      return nil;
    }, TMP_5.$$arity = 1);

    return (Opal.defn(self, '$checkRoll', TMP_8 = function $$checkRoll(diceCount, countNo) {
      var $a, $b, TMP_6, $c, TMP_7, self = this, dice = nil, diceText = nil, diceText2 = nil, diceArray = nil, resultArray = nil, success = nil, countText = nil, resultText = nil, result = nil;

      $b = self.$roll(diceCount, 10, self.sortType), $a = Opal.to_ary($b), dice = ($a[0] == null ? nil : $a[0]), diceText = ($a[1] == null ? nil : $a[1]), $b;
      diceText2 = diceText.$gsub("10", "0");
      diceArray = ($a = ($b = diceText2.$split(/,/)).$collect, $a.$$p = (TMP_6 = function(i){var self = TMP_6.$$s || this;
if (i == null) i = nil;
      return i.$to_i()}, TMP_6.$$s = self, TMP_6.$$arity = 1, TMP_6), $a).call($b);
      resultArray = $scope.get('Array').$new();
      success = 0;
      ($a = ($c = diceArray).$each, $a.$$p = (TMP_7 = function(i){var self = TMP_7.$$s || this, $d, multiple = nil;
if (i == null) i = nil;
      multiple = countNo.$count(i);
        if ((($d = ($rb_gt(multiple, 0))) !== nil && $d != null && (!$d.$$is_boolean || $d == true))) {
          resultArray.$push("" + (i) + "(x" + (multiple) + ")");
          return success = $rb_plus(success, multiple);
          } else {
          return resultArray.$push("×")
        };}, TMP_7.$$s = self, TMP_7.$$arity = 1, TMP_7), $a).call($c);
      countText = countNo.$join(",");
      resultText = resultArray.$join(",");
      result = "" + (diceCount) + "D10(命数：" + (countText) + ") ＞ " + (diceText) + " ＞ " + (resultText) + " ＞ 成功数：" + (success);
      return result;
    }, TMP_8.$$arity = 2), nil) && 'checkRoll';
  })($scope.base, $scope.get('DiceBot'))
})(Opal);

/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return $scope.get('Kernel').$exit()
})(Opal);
