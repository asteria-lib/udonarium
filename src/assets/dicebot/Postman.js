/* Generated by Opal 0.10.5 */
(function(Opal) {
  function $rb_lt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);
  }
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_gt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $gvars = Opal.gvars;

  Opal.add_stubs(['$setPrefixes', '$upcase', '$===', '$to_i', '$<', '$scan', '$each', '$+', '$!=', '$checkRoll', '$get_weather_table', '$get_free_situation_table', '$roll', '$collect', '$split', '$[]', '$count', '$==', '$>', '$>=', '$get_table_by_number']);
  return (function($base, $super) {
    function $Postman(){};
    var self = $Postman = $klass($base, $super, 'Postman', $Postman);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_7, TMP_10, TMP_11, TMP_12;

    def.sortTye = nil;
    self.$setPrefixes(["WEA\\d*", "(\\d+)?PO.*", "FRE"]);

    Opal.defn(self, '$initialize', TMP_1 = function $$initialize() {
      var $a, $b, self = this, $iter = TMP_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_index = nil, $zuper_length = nil;

      TMP_1.$$p = null;
      $zuper = [];
      
      for($zuper_index = 0; $zuper_index < arguments.length; $zuper_index++) {
        $zuper[$zuper_index] = arguments[$zuper_index];
      }
      ($a = ($b = self, Opal.find_super_dispatcher(self, 'initialize', TMP_1, false)), $a.$$p = $iter, $a).apply($b, $zuper);
      return self.sortType = 1;
    }, TMP_1.$$arity = 0);

    Opal.defn(self, '$gameName', TMP_2 = function $$gameName() {
      var self = this;

      return "壊れた世界のポストマン";
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$gameType', TMP_3 = function $$gameType() {
      var self = this;

      return "Postman";
    }, TMP_3.$$arity = 0);

    Opal.defn(self, '$getHelpMessage', TMP_4 = function $$getHelpMessage() {
      var self = this;

      return "◆判定：[n]PO[+-a][> or >= or @X]　　[]内省略可。\n\n達成値と判定の成否、クリティカル、ファンブルを結果表示します。\n「n」でダイス数を指定。省略時は2D。\n「+-a」で達成値への修正を指定。「+2+1-4」のような複数回指定可。\n「>X」「>=X」「@X」で難易度を指定可。\n「>X」は達成値>難易度、「>=X」「@X」は達成値>=難易度で判定します。\n\n【書式例】\n3PO+2-1 → 3Dで達成値修正+1の判定。達成値のみ表示。\nPO@5+2 → 2Dで目標値7の判定。判定の成否と達成値を表示。\n4PO-2+1>7+2 → 4Dで達成値修正-1、目標値9（同値は失敗）の判定。\n\n\n◆天候チェック：WEA[n]　　[]内省略可。\n\n天候チェック表を参照します。\n「n」を指定すると、指定した結果を表示します。（【幸運点】使用時用）\n\n\n◆自由行動シチュエーション表：FRE\n";
    }, TMP_4.$$arity = 0);

    Opal.defn(self, '$rollDiceCommand', TMP_7 = function $$rollDiceCommand(command) {
      var $a, $b, TMP_5, $c, TMP_6, $d, self = this, text = nil, $case = nil, diceCount = nil, modify = nil, modifyAddString = nil, type = nil, target = nil, targetAddString = nil, modify_list = nil, target_list = nil, roc = nil;

      text = (function() {$case = command.$upcase();if (/(\d+)?PO(\d+)?(([+-]\d+)*)?((>|>=|@)(\d+)(([+-]\d+)*)?)?/i['$===']($case)) {diceCount = (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))) !== false && $a !== nil && $a != null) ? $a : 2)).$to_i();
      if ((($a = ($rb_lt(diceCount, 2))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        diceCount = 2};
      modify = (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](2))) !== false && $a !== nil && $a != null) ? $a : 0)).$to_i();
      modifyAddString = (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](3))) !== false && $a !== nil && $a != null) ? $a : ""));
      type = (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](6))) !== false && $a !== nil && $a != null) ? $a : ""));
      target = (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](7))) !== false && $a !== nil && $a != null) ? $a : 0)).$to_i();
      targetAddString = (((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](8))) !== false && $a !== nil && $a != null) ? $a : ""));
      modify_list = modifyAddString.$scan(/[+-]\d+/);
      ($a = ($b = modify_list).$each, $a.$$p = (TMP_5 = function(i){var self = TMP_5.$$s || this;
if (i == null) i = nil;
      return modify = $rb_plus(modify, i.$to_i())}, TMP_5.$$s = self, TMP_5.$$arity = 1, TMP_5), $a).call($b);
      if ((($a = (target['$!='](0))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        target_list = targetAddString.$scan(/[+-]\d+/);
        ($a = ($c = target_list).$each, $a.$$p = (TMP_6 = function(j){var self = TMP_6.$$s || this;
if (j == null) j = nil;
        return target = $rb_plus(target, j.$to_i())}, TMP_6.$$s = self, TMP_6.$$arity = 1, TMP_6), $a).call($c);};
      return self.$checkRoll(diceCount, modify, type, target);}else if (/WEA(\d+)?/i['$===']($case)) {roc = (((($a = (($d = $gvars['~']) === nil ? nil : $d['$[]'](1))) !== false && $a !== nil && $a != null) ? $a : 0)).$to_i();
      return self.$get_weather_table(roc);}else if ("FRE"['$===']($case)) {return self.$get_free_situation_table()}else {return nil}})();
      return text;
    }, TMP_7.$$arity = 1);

    Opal.defn(self, '$checkRoll', TMP_10 = function $$checkRoll(diceCount, modify, type, target) {
      var $a, $b, TMP_8, $c, TMP_9, self = this, dice = nil, diceText = nil, diceArray = nil, dice2 = nil, diceText2 = nil, criticalCount = nil, modifyText = nil, result = nil, resultText = nil, operatorText = nil, text = nil;

      $b = self.$roll(diceCount, 6, self.sortTye), $a = Opal.to_ary($b), dice = ($a[0] == null ? nil : $a[0]), diceText = ($a[1] == null ? nil : $a[1]), $b;
      diceArray = ($a = ($b = diceText.$split(/,/)).$collect, $a.$$p = (TMP_8 = function(i){var self = TMP_8.$$s || this;
if (i == null) i = nil;
      return i.$to_i()}, TMP_8.$$s = self, TMP_8.$$arity = 1, TMP_8), $a).call($b);
      dice2 = $rb_plus(diceArray['$[]'](-2), diceArray['$[]'](-1));
      diceText2 = "" + (diceArray['$[]'](-2)) + "," + (diceArray['$[]'](-1));
      criticalCount = ($a = ($c = diceArray).$count, $a.$$p = (TMP_9 = function(i){var self = TMP_9.$$s || this;
if (i == null) i = nil;
      return i['$=='](6)}, TMP_9.$$s = self, TMP_9.$$arity = 1, TMP_9), $a).call($c);
      if ((($a = (modify['$!='](0))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        modifyText = "";
        if ((($a = ($rb_gt(modify, 0))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
          modifyText = "+"};
        modifyText = $rb_plus(modifyText, "" + (modify));};
      result = $rb_plus(dice2, modify);
      if ((($a = (type['$!='](""))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        resultText = " 【失敗】";
        operatorText = ">";
        if ((($a = (type['$=='](">"))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
          if ((($a = ($rb_gt(result, target))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
            resultText = " 【成功】"}
          } else {
          operatorText = $rb_plus(operatorText, "=");
          if ((($a = ($rb_ge(result, target))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
            resultText = " 【成功】"};
        };};
      if ((($a = ($rb_ge(criticalCount, 2))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        resultText = " 【成功】（クリティカル）"
      } else if ((($a = (dice['$=='](diceCount))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        resultText = " 【失敗】（ファンブル）"};
      text = "" + (diceCount) + "D6(" + (diceText) + ")" + (modifyText) + " ＞ " + (dice2) + "(" + (diceText2) + ")" + (modifyText) + " = 達成値：" + (result);
      if ((($a = ($rb_gt(target, 0))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        text = $rb_plus(text, "" + (operatorText) + (target) + " ")};
      text = $rb_plus(text, "" + (resultText));
      return text;
    }, TMP_10.$$arity = 4);

    Opal.defn(self, '$get_weather_table', TMP_11 = function $$get_weather_table(roc) {
      var $a, $b, self = this, name = nil, table = nil, dice = nil, diceText = nil, tableText = nil, text = nil;

      name = "天候チェック";
      table = [[2, "大雨と強風。探索判定の難易度に+4。"], [3, "風が強い1日になりそう。探索判定の難易度に+2。"], [4, "晴れ。特になし。"], [5, "夜の間の雨でぬかるむ。探索判定の難易度に+2。"], [6, "それなりの雨足。探索判定の難易度に+2。"], [7, "晴れ。特になし。"], [8, "天気は大荒れ。探索判定の難易度に+4。"], [9, "小雨が降る。探索判定の難易度に+1。"], [10, "それなりの雨足。探索判定の難易度に+2。"], [11, "晴れ。特になし。"], [12, "風が強い1日になりそう。探索判定の難易度に+2。"]];
      if ((($a = (roc['$=='](0))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        $b = self.$roll(2, 6), $a = Opal.to_ary($b), dice = ($a[0] == null ? nil : $a[0]), diceText = ($a[1] == null ? nil : $a[1]), $b
        } else {
        if ((($a = ($rb_lt(roc, 2))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
          roc = 2};
        if ((($a = ($rb_gt(roc, 12))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
          roc = 12};
        dice = roc;
        diceText = "Choice:" + (roc);
      };
      tableText = self.$get_table_by_number(dice, table);
      text = "" + (name) + "(" + (diceText) + ") ＞ " + (dice) + "：" + (tableText);
      return text;
    }, TMP_11.$$arity = 1);

    return (Opal.defn(self, '$get_free_situation_table', TMP_12 = function $$get_free_situation_table() {
      var $a, $b, self = this, name = nil, table = nil, dice = nil, diceText = nil, tableText = nil, text = nil;

      name = "自由行動シチュエーション表";
      table = [[2, "何をするでもなく、霞がかったような夜空を見上げる。ふと隣に目を向ければ、彼/彼女が居た。彼/彼女は、こうなる前の夜空を知っているのだろうか。"], [3, "夢を見た。大戦の最中、街が、人が、世界が焼けていく悪夢を。追い立てられるようにして目を覚ますと、彼/彼女が君を見ていた。　……もしかして、自分はよほどうなされていたのだろうか。"], [4, "周囲で見つけたガラクタを使って、ちょっとしたビックリ玩具を作ってみた。「彼/ 彼女」にコイツをけしかけたら、どんな反応をするだろうか？"], [5, "使えそうなものがないか探していると、カタンと物音がして何かが落ちた。拾い上げてみたそれは、かつてここで生活していた誰かの名残（写真、家具、玩具等）だった。"], [6, "テントの中で夜を過ごしていると、ふと彼/彼女と話したくてたまらない気持ちになった。言ってしまえば、夜の静けさに寂しさを覚えてしまったのだ。"], [7, "ここまでの配達の記録をつけていたら、背後から視線を感じる……！　もしや、彼/彼女に覗かれている……！？"], [8, "周囲を探索していると、君一人では手の届かないところに金属製の箱か何かがあることに気づいた。彼/彼女に手伝ってもらえば、取れるだろうか……？"], [9, "朝まではまだしばらくあるというのに、目が覚めてしまった。二度寝しようにも寝付けずに居ると、隣でもぞもぞと動く気配がする。彼/彼女も、どうやら同じらしい。"], [10, "他愛のない話をするうちに、君は彼/彼女に問いかけていた。「何故、ポストマンになろうと思ったのか」　……そういえば、君自身はどうだったろうか。"], [11, "保存食にありつこうとしたその時、君は気づいた。一匹のネズミが、彼/彼女の荷物の中に潜り込もうとしている。彼/彼女は気づいていないが、このままでは食料が危ない！"], [12, "テントを設営し、落ち着いた頃にふと気づく。　……身体が熱い。少し、だるさもあるような気もする。大したことはないと思うが、彼/彼女に相談しておいた方がいいだろうか。"]];
      $b = self.$roll(2, 6), $a = Opal.to_ary($b), dice = ($a[0] == null ? nil : $a[0]), diceText = ($a[1] == null ? nil : $a[1]), $b;
      tableText = self.$get_table_by_number(dice, table);
      text = "" + (name) + "(" + (diceText) + ") ＞ " + (dice) + "：" + (tableText);
      return text;
    }, TMP_12.$$arity = 0), nil) && 'get_free_situation_table';
  })($scope.base, $scope.get('DiceBot'))
})(Opal);

/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return $scope.get('Kernel').$exit()
})(Opal);
